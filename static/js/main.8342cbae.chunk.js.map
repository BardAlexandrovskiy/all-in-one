{"version":3,"sources":["components/Footer/index.js","screens/MainScreen/index.js","screens/NewsScreen/index.js","actions/weather.js","components/WeatherHeader/index.js","components/WeatherMain/index.js","screens/WeatherScreen/index.js","actions/toDo.js","components/TasksHeader/index.js","constants/tasks.js","components/TasksItem/index.js","components/TasksMain/index.js","components/TasksFilterButton/index.js","components/TasksFooter/index.js","components/TasksWelcomeBanner/index.js","screens/TasksScreen/index.js","router/index.js","reducers/toDo.js","reducers/weather.js","reducers/index.js","store/index.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Footer","className","to","icon","faHome","faNewspaper","faCloud","faListUl","MainScreen","React","Component","NewsScreen","SET_LOCATION_BY_IP","getLocationByIp","dispatch","fetch","then","response","status","json","Error","objectIp","ip","id","location","city","name_en","type","payload","getWeatherByCity","cityName","weatherObject","temp","main","all","clouds","Math","round","cloudiness","object","console","log","WeatherHeader","cityByIp","this","props","faMapMarkerAlt","connect","store","weather","locationByIp","WeatherMain","mapDispatchToProps","WeatherScreen","ADD_NEW_TASK","TOGGLE_TASK","DELETE_TASK","CHANGE_TASK_FILTER","CHANGE_SEARCH_TASKS_INPUT_VALUE","CHANGE_ADD_TASK_INPUT_VALUE","CHECK_ALL_TASKS","DELETE_COMPLETED_TASKS","EDIT_TASK","changeAddTaskInputValue","value","changeTaskFilter","filter","changeSearchTasksInputValue","TasksHeader","handleChangeInput","e","target","handleClickClearButton","tasksList","searchTasksInputValue","checkAllTasks","deleteCompletedTasks","check","counter","forEach","el","CSSTransition","in","length","timeout","unmountOnExit","mountOnEnter","onClick","faBackspace","onChange","placeholder","faChevronDown","toDo","list","filterAll","filterActive","filterCompleted","Hightlight","otherValue","hightlightValue","ChangedValue","searchValue","string","newSearchValue","replace","regExp","RegExp","matchValue","match","split","map","index","array","shift","TasksItem","handleClickValue","setState","isShowEditValue","editorValue","handleChangeEditor","addNewValue","editTask","state","trim","handlePressEditor","key","handleBlurEditor","handleFocusEditor","event","toggleTask","deleteTask","searchInputValue","faCheck","onFocus","autoFocus","onKeyPress","onBlur","faTimes","data","TasksMain","componentDidUpdate","prevProps","prevTasksList","prevFilter","prevSearchValue","currentTasksList","currentFilter","currentSearchValue","tasksMainRef","current","scrollTo","createRef","ref","TransitionGroup","component","task","toLowerCase","includes","reverse","name","title","TasksFooter","handlePressInput","handleClickButton","addTaskInputValue","addNewTask","redInputBorder","inputRef","focus","handleBlurInput","faPlus","TasksWelcomeBanner","faAngleDown","TasksScreen","SwitchTransition","mode","RouterAnimation","useLocation","path","element","useEffect","localStorage","setItem","JSON","stringify","localInitialState","parse","getItem","initialState","rootReducer","combineReducers","action","concat","Date","now","item","Object","assign","createStore","composeWithDevTools","applyMiddleware","logger","thunk","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8342cbae.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  faCloud,\r\n  faHome,\r\n  faListUl,\r\n  faNewspaper,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./styles.scss\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"container footer-container\">\r\n        <nav className=\"nav-menu\">\r\n          <ul>\r\n            <li>\r\n              <NavLink to=\"/\">\r\n                <FontAwesomeIcon icon={faHome} />\r\n                Main\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/news\">\r\n                <FontAwesomeIcon icon={faNewspaper} />\r\n                News\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/weather\">\r\n                <FontAwesomeIcon icon={faCloud} />\r\n                Weather\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/tasks\">\r\n                <FontAwesomeIcon icon={faListUl} />\r\n                Tasks\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nclass MainScreen extends React.Component {\r\n  render() {\r\n    return <div className=\"main-screen screen\">MainScreen</div>;\r\n  }\r\n}\r\n\r\nexport default MainScreen;\r\n","import React from \"react\";\r\n\r\nclass NewsScreen extends React.Component {\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return <div className=\"news-screen screen\"></div>;\r\n  }\r\n}\r\n\r\nexport default NewsScreen;\r\n","// Types\r\nexport const SET_LOCATION_BY_IP = \"SET_LOCATION_BY_IP\";\r\n\r\n// Actions\r\nexport const setLocationByIp = (city) => {\r\n  return {\r\n    type: SET_LOCATION_BY_IP,\r\n    payload: { city },\r\n  };\r\n};\r\n\r\nexport const getLocationByIp = () => {\r\n  return (dispatch) => {\r\n    fetch(\"https://api.ipify.org?format=json\")\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        }\r\n        throw new Error(response.status);\r\n      })\r\n      .then((objectIp) => objectIp.ip)\r\n      .then((id) => {\r\n        fetch(`https://api.sypexgeo.net/json/${id}`)\r\n          .then((response) => {\r\n            if (response.status === 200) {\r\n              return response.json();\r\n            }\r\n            throw new Error(response.status);\r\n          })\r\n          .then((location) => {\r\n            dispatch(setLocationByIp(location.city.name_en));\r\n          });\r\n      });\r\n  };\r\n};\r\n\r\nexport const getWeatherByCity = (cityName) => {\r\n  return (dispatch) => {\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=12c7488f70bcd015f75b9a10d559d91f&units=metric`\r\n    )\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        }\r\n        throw new Error(response.status);\r\n      })\r\n      .then((weatherObject) => {\r\n        const {\r\n          main: { temp },\r\n          clouds: { all },\r\n        } = weatherObject;\r\n\r\n        return {\r\n          temp: Math.round(temp),\r\n          cloudiness: all,\r\n        };\r\n      })\r\n      .then((object) => console.log(object));\r\n  };\r\n};\r\n","import { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./styles.scss\";\r\n\r\nclass WeatherHeader extends React.Component {\r\n  render() {\r\n    const { cityByIp } = this.props;\r\n\r\n    return (\r\n      <header className=\"weather-header\">\r\n        <div className=\"header-container container\">\r\n          <div className=\"current-city\">\r\n            {cityByIp ? cityByIp : \"Locating...\"}\r\n            <FontAwesomeIcon icon={faMapMarkerAlt} />\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  const {\r\n    weather: {\r\n      locationByIp: { city: cityByIp },\r\n    },\r\n  } = store;\r\n\r\n  return {\r\n    cityByIp: cityByIp,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(WeatherHeader);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getWeatherByCity } from \"../../actions/weather\";\r\n\r\nclass WeatherMain extends React.Component {\r\n  componentDidUpdate() {}\r\n\r\n  render() {\r\n    return <div className=\"weather-main\"></div>;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getWeatherByCity: (cityName) => getWeatherByCity(cityName),\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(WeatherMain);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getLocationByIp, getWeatherByCity } from \"../../actions/weather\";\r\nimport WeatherHeader from \"../../components/WeatherHeader\";\r\nimport WeatherMain from \"../../components/WeatherMain\";\r\nimport \"./styles.scss\";\r\n\r\nclass WeatherScreen extends React.Component {\r\n  componentDidMount() {\r\n    const { getLocationByIp } = this.props;\r\n    getLocationByIp();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"weather-screen screen\">\r\n        <WeatherHeader />\r\n        <WeatherMain />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getLocationByIp: () => getLocationByIp(),\r\n  getWeatherByCity: (cityName) => getWeatherByCity(cityName),\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(WeatherScreen);\r\n","// Types\r\nexport const ADD_NEW_TASK = \"ADD_NEW_TASK\";\r\nexport const TOGGLE_TASK = \"TOGGLE_TASK\";\r\nexport const DELETE_TASK = \"DELETE_TASK\";\r\nexport const CHANGE_TASK_FILTER = \"CHANGE_TASK_FILTER\";\r\nexport const CHANGE_SEARCH_TASKS_INPUT_VALUE =\r\n  \"CHANGE_SEARCH_TASKS_INPUT_VALUE\";\r\nexport const CHANGE_ADD_TASK_INPUT_VALUE = \"CHANGE_ADD_TASK_INPUT_VALUE\";\r\nexport const CHECK_ALL_TASKS = \"CHECK_ALL_TASKS\";\r\nexport const DELETE_COMPLETED_TASKS = \"DELETE_COMPLETED_TASKS\";\r\nexport const EDIT_TASK = \"EDIT_TASK\";\r\n\r\n// Actions\r\nexport const addNewTask = (value) => {\r\n  return {\r\n    type: ADD_NEW_TASK,\r\n    payload: { value },\r\n  };\r\n};\r\n\r\nexport const changeAddTaskInputValue = (value) => {\r\n  return {\r\n    type: CHANGE_ADD_TASK_INPUT_VALUE,\r\n    payload: { value },\r\n  };\r\n};\r\n\r\nexport const toggleTask = (id) => {\r\n  return {\r\n    type: TOGGLE_TASK,\r\n    payload: { id },\r\n  };\r\n};\r\n\r\nexport const deleteTask = (id) => {\r\n  return {\r\n    type: DELETE_TASK,\r\n    payload: { id },\r\n  };\r\n};\r\n\r\nexport const changeTaskFilter = (filter) => {\r\n  return {\r\n    type: CHANGE_TASK_FILTER,\r\n    payload: { filter },\r\n  };\r\n};\r\n\r\nexport const changeSearchTasksInputValue = (value) => {\r\n  return {\r\n    type: CHANGE_SEARCH_TASKS_INPUT_VALUE,\r\n    payload: { value },\r\n  };\r\n};\r\n\r\nexport const checkAllTasks = () => {\r\n  return {\r\n    type: CHECK_ALL_TASKS,\r\n  };\r\n};\r\n\r\nexport const deleteCompletedTasks = () => {\r\n  return {\r\n    type: DELETE_COMPLETED_TASKS,\r\n  };\r\n};\r\n\r\nexport const editTask = (data) => {\r\n  return {\r\n    type: EDIT_TASK,\r\n    payload: data,\r\n  };\r\n};\r\n","import { faBackspace, faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport React from \"react\";\r\nimport \"./styles.scss\";\r\nimport {\r\n  changeSearchTasksInputValue,\r\n  checkAllTasks,\r\n  deleteCompletedTasks,\r\n} from \"../../actions/toDo\";\r\n\r\nclass TasksHeader extends React.Component {\r\n  handleChangeInput = (e) => {\r\n    const { changeSearchTasksInputValue } = this.props;\r\n    changeSearchTasksInputValue(e.target.value);\r\n  };\r\n\r\n  handleClickClearButton = () => {\r\n    const { changeSearchTasksInputValue } = this.props;\r\n    changeSearchTasksInputValue(\"\");\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      tasksList,\r\n      searchTasksInputValue,\r\n      checkAllTasks,\r\n      deleteCompletedTasks,\r\n    } = this.props;\r\n\r\n    let check = false;\r\n    let counter = 0;\r\n\r\n    tasksList.forEach((el) => {\r\n      if (el.check) {\r\n        check = true;\r\n      } else counter += 1;\r\n    });\r\n\r\n    return (\r\n      <CSSTransition\r\n        in={!!tasksList.length}\r\n        timeout={300}\r\n        unmountOnExit\r\n        mountOnEnter\r\n      >\r\n        <header className=\"tasks-header\">\r\n          <div className=\"search\">\r\n            <div className=\"container search-container\">\r\n              <div className=\"input-wrapper\">\r\n                <CSSTransition\r\n                  in={!!searchTasksInputValue}\r\n                  timeout={300}\r\n                  unmountOnExit\r\n                  mountOnEnter\r\n                >\r\n                  <div\r\n                    onClick={this.handleClickClearButton}\r\n                    className=\"clear-input\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faBackspace} />\r\n                  </div>\r\n                </CSSTransition>\r\n                <input\r\n                  onChange={this.handleChangeInput}\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  value={searchTasksInputValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bottom-side\">\r\n            <div className=\"container bottom-container\">\r\n              <div className=\"column left-column\">\r\n                <div\r\n                  onClick={checkAllTasks}\r\n                  className={`button check-all-button${\r\n                    tasksList.length && !counter ? \" green\" : \"\"\r\n                  }`}\r\n                >\r\n                  <FontAwesomeIcon icon={faChevronDown} />\r\n                </div>\r\n                <div className=\"counter\">Active: {counter}</div>\r\n              </div>\r\n              <div className=\"column right-column\">\r\n                <CSSTransition\r\n                  in={!!check}\r\n                  timeout={300}\r\n                  unmountOnExit\r\n                  mountOnEnter\r\n                >\r\n                  <div\r\n                    onClick={deleteCompletedTasks}\r\n                    className=\"button delete-completed-button\"\r\n                  >\r\n                    Delete completed\r\n                  </div>\r\n                </CSSTransition>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      </CSSTransition>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  const {\r\n    toDo: { list, searchTasksInputValue },\r\n  } = store;\r\n\r\n  return {\r\n    tasksList: list,\r\n    searchTasksInputValue: searchTasksInputValue,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  changeSearchTasksInputValue: (value) => changeSearchTasksInputValue(value),\r\n  checkAllTasks: () => checkAllTasks(),\r\n  deleteCompletedTasks: () => deleteCompletedTasks(),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksHeader);\r\n","// Filters\r\nexport const filterAll = {\r\n  title: \"All\",\r\n  name: \"all\",\r\n};\r\nexport const filterActive = {\r\n  title: \"Active\",\r\n  name: \"active\",\r\n};\r\nexport const filterCompleted = {\r\n  title: \"Completed\",\r\n  name: \"completed\",\r\n};\r\n","import { faCheck, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { deleteTask, editTask, toggleTask } from \"../../actions/toDo\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./styles.scss\";\r\nimport React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst Hightlight = ({ otherValue, hightlightValue }) => {\r\n  return (\r\n    <>\r\n      {otherValue}\r\n      <span className={\"hightlight\"}>{hightlightValue}</span>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ChangedValue = ({ searchValue, string }) => {\r\n  if (searchValue) {\r\n    const newSearchValue = searchValue.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    const regExp = new RegExp(newSearchValue, \"gi\");\r\n    const matchValue = string.match(regExp);\r\n\r\n    if (matchValue) {\r\n      return string.split(regExp).map((otherValue, index, array) => {\r\n        if (index < array.length - 1) {\r\n          const hightlightValue = matchValue.shift();\r\n          return (\r\n            <Hightlight\r\n              hightlightValue={hightlightValue}\r\n              otherValue={otherValue}\r\n              key={index + string}\r\n            />\r\n          );\r\n        }\r\n        return otherValue;\r\n      });\r\n    }\r\n    return string;\r\n  }\r\n  return string;\r\n};\r\n\r\nclass TasksItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isShowEditValue: false,\r\n      editorValue: \"\",\r\n    };\r\n  }\r\n\r\n  handleClickValue = () => {\r\n    const { value } = this.props;\r\n    this.setState({ isShowEditValue: true, editorValue: value });\r\n  };\r\n\r\n  handleChangeEditor = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({ editorValue: e.target.value });\r\n  };\r\n\r\n  addNewValue = () => {\r\n    const { editTask, id } = this.props;\r\n    const { editorValue } = this.state;\r\n\r\n    if (editorValue.trim()) {\r\n      editTask({ id: id, value: editorValue });\r\n      this.setState({ isShowEditValue: false });\r\n    } else {\r\n      this.setState({ isShowEditValue: false, editorValue: \"\" });\r\n    }\r\n  };\r\n\r\n  handlePressEditor = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.addNewValue();\r\n    }\r\n  };\r\n\r\n  handleBlurEditor = () => {\r\n    this.addNewValue();\r\n  };\r\n\r\n  handleFocusEditor = (event) => {\r\n    const value = event.target.value;\r\n    event.target.value = \"\";\r\n    event.target.value = value;\r\n  };\r\n\r\n  render() {\r\n    const { value, check, id, toggleTask, deleteTask, searchInputValue } =\r\n      this.props;\r\n\r\n    const { isShowEditValue, editorValue } = this.state;\r\n\r\n    return (\r\n      <li className={`tasks-item${check ? \" checked\" : \"\"}`} id={id}>\r\n        <div className=\"check-button\" onClick={() => toggleTask(id)}>\r\n          <CSSTransition in={check} timeout={300} unmountOnExit mountOnEnter>\r\n            <FontAwesomeIcon icon={faCheck} />\r\n          </CSSTransition>\r\n        </div>\r\n        <div className=\"value\">\r\n          {isShowEditValue ? (\r\n            <input\r\n              onFocus={this.handleFocusEditor}\r\n              autoFocus\r\n              onChange={this.handleChangeEditor}\r\n              onKeyPress={this.handlePressEditor}\r\n              className=\"inner editor\"\r\n              onBlur={this.handleBlurEditor}\r\n              value={editorValue}\r\n              type=\"text\"\r\n            />\r\n          ) : (\r\n            <div className=\"inner\" onClick={() => this.handleClickValue()}>\r\n              {<ChangedValue searchValue={searchInputValue} string={value} />}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"delete-button\" onClick={() => deleteTask(id)}>\r\n          <FontAwesomeIcon icon={faTimes} />\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  return {\r\n    searchInputValue: store.toDo.searchTasksInputValue,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  deleteTask: (id) => deleteTask(id),\r\n  toggleTask: (id) => toggleTask(id),\r\n  editTask: (data) => editTask(data),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { filterActive, filterCompleted } from \"../../constants/tasks\";\r\nimport TasksItem from \"../TasksItem\";\r\nimport \"./styles.scss\";\r\n\r\nclass TasksMain extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.tasksMainRef = React.createRef();\r\n  }\r\n\r\n  componentDidUpdate = (prevProps) => {\r\n    const {\r\n      tasksList: prevTasksList,\r\n      filter: prevFilter,\r\n      searchInputValue: prevSearchValue,\r\n    } = prevProps;\r\n    const {\r\n      tasksList: currentTasksList,\r\n      filter: currentFilter,\r\n      searchInputValue: currentSearchValue,\r\n    } = this.props;\r\n\r\n    if (\r\n      prevTasksList.length < currentTasksList.length ||\r\n      prevFilter !== currentFilter ||\r\n      prevSearchValue !== currentSearchValue\r\n    ) {\r\n      this.tasksMainRef.current.scrollTo(0, 0);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { tasksList, filter, searchInputValue } = this.props;\r\n    return (\r\n      <main className=\"tasks-main\" ref={this.tasksMainRef}>\r\n        <div className=\"tasks-list\">\r\n          <div className=\"container\">\r\n            <ul>\r\n              <TransitionGroup component={null}>\r\n                {tasksList\r\n                  .filter((task) => {\r\n                    switch (filter) {\r\n                      case filterActive.name:\r\n                        return !task.check;\r\n                      case filterCompleted.name:\r\n                        return task.check;\r\n                      default:\r\n                        return task;\r\n                    }\r\n                  })\r\n                  .filter((task) => {\r\n                    if (searchInputValue) {\r\n                      const matchValue = searchInputValue.toLowerCase();\r\n                      if (task.value.toLowerCase().includes(matchValue))\r\n                        return true;\r\n                      return false;\r\n                    } else {\r\n                      return task;\r\n                    }\r\n                  })\r\n                  .reverse()\r\n                  .map((task) => {\r\n                    const { check, value, id } = task;\r\n                    return (\r\n                      <CSSTransition key={id} timeout={300}>\r\n                        <TasksItem check={check} value={value} id={id} />\r\n                      </CSSTransition>\r\n                    );\r\n                  })}\r\n              </TransitionGroup>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  const {\r\n    toDo: { list, filter, searchTasksInputValue },\r\n  } = store;\r\n\r\n  return {\r\n    tasksList: list,\r\n    filter: filter,\r\n    searchInputValue: searchTasksInputValue,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TasksMain);\r\n","import { connect } from \"react-redux\";\r\nimport { changeTaskFilter } from \"../../actions/toDo\";\r\nimport \"./styles.scss\";\r\n\r\nconst TasksFilterButton = ({ name, title, changeTaskFilter, filter }) => {\r\n  const className = `${\r\n    name === filter ? name + \" current\" : name\r\n  } button tasks-filter-button`;\r\n\r\n  return (\r\n    <button onClick={() => changeTaskFilter(name)} className={className}>\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (store) => {\r\n  return {\r\n    filter: store.toDo.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  changeTaskFilter: (filter) => changeTaskFilter(filter),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksFilterButton);\r\n","import \"./styles.scss\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { connect } from \"react-redux\";\r\nimport { addNewTask, changeAddTaskInputValue } from \"../../actions/toDo\";\r\nimport React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport {\r\n  filterActive,\r\n  filterCompleted,\r\n  filterAll,\r\n} from \"../../constants/tasks\";\r\nimport TasksFilterButton from \"../TasksFilterButton\";\r\n\r\nclass TasksFooter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redInputBorder: false,\r\n    };\r\n    this.inputRef = React.createRef();\r\n  }\r\n\r\n  handleChangeInput = (e) => {\r\n    const { changeAddTaskInputValue } = this.props;\r\n    const value = e.target.value;\r\n\r\n    if (value.length <= 140) {\r\n      changeAddTaskInputValue(value);\r\n    }\r\n  };\r\n\r\n  handlePressInput = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.handleClickButton();\r\n    }\r\n  };\r\n\r\n  handleClickButton = () => {\r\n    const { changeAddTaskInputValue, addTaskInputValue } = this.props;\r\n    if (addTaskInputValue.length && addTaskInputValue.trim()) {\r\n      const { addNewTask } = this.props;\r\n      addNewTask(addTaskInputValue);\r\n      changeAddTaskInputValue(\"\");\r\n      this.setState({ redInputBorder: false });\r\n    } else {\r\n      this.setState({ redInputBorder: true });\r\n    }\r\n\r\n    this.inputRef.current.focus();\r\n  };\r\n\r\n  handleBlurInput = () => {\r\n    this.setState({ redInputBorder: false });\r\n  };\r\n\r\n  render() {\r\n    const { addTaskInputValue, tasksList } = this.props;\r\n    const { redInputBorder } = this.state;\r\n    return (\r\n      <footer className=\"tasks-footer\">\r\n        <CSSTransition\r\n          in={!!tasksList.length}\r\n          timeout={300}\r\n          mountOnEnter\r\n          unmountOnExit\r\n        >\r\n          <div className=\"filters\">\r\n            <div className=\"filters-container container\">\r\n              <TasksFilterButton\r\n                name={filterAll.name}\r\n                title={filterAll.title}\r\n              />\r\n              <TasksFilterButton\r\n                name={filterActive.name}\r\n                title={filterActive.title}\r\n              />\r\n              <TasksFilterButton\r\n                name={filterCompleted.name}\r\n                title={filterCompleted.title}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CSSTransition>\r\n        <div className=\"add-task-input\">\r\n          <div className=\"container input-container\">\r\n            <div className=\"input-wrapper\">\r\n              <input\r\n                ref={this.inputRef}\r\n                className={redInputBorder ? \"red\" : \"\"}\r\n                onKeyPress={this.handlePressInput}\r\n                onBlur={this.handleBlurInput}\r\n                onChange={this.handleChangeInput}\r\n                value={addTaskInputValue}\r\n                type=\"text\"\r\n                placeholder=\"Add Task\"\r\n              />\r\n              <CSSTransition\r\n                in={!!addTaskInputValue}\r\n                timeout={300}\r\n                unmountOnExit\r\n                mountOnEnter\r\n              >\r\n                <button onClick={this.handleClickButton} className=\"button\">\r\n                  <FontAwesomeIcon icon={faPlus} />\r\n                </button>\r\n              </CSSTransition>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  const {\r\n    toDo: { list, searchTasksInputValue, addTaskInputValue },\r\n  } = store;\r\n\r\n  return {\r\n    tasksList: list,\r\n    searchTasksInputValue: searchTasksInputValue,\r\n    addTaskInputValue: addTaskInputValue,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addNewTask: (value) => addNewTask(value),\r\n  changeAddTaskInputValue: (value) => changeAddTaskInputValue(value),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksFooter);\r\n","import { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./styles.scss\";\r\n\r\nconst TasksWelcomeBanner = () => {\r\n  return (\r\n    <div className=\"tasks-welcome-banner\">\r\n      <div className=\"container\">\r\n        <div className=\"text\">\r\n          This is where your tasks will be. You can add your first task in the\r\n          field below.\r\n        </div>\r\n        <FontAwesomeIcon icon={faAngleDown} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksWelcomeBanner;\r\n","import TasksHeader from \"../../components/TasksHeader\";\r\nimport TasksMain from \"../../components/TasksMain\";\r\nimport TasksFooter from \"../../components/TasksFooter\";\r\nimport { CSSTransition, SwitchTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./styles.scss\";\r\nimport TasksWelcomeBanner from \"../../components/TasksWelcomeBanner\";\r\nimport React from \"react\";\r\nimport {\r\n  changeAddTaskInputValue,\r\n  changeSearchTasksInputValue,\r\n  changeTaskFilter,\r\n} from \"../../actions/toDo\";\r\nimport { filterAll } from \"../../constants/tasks\";\r\n\r\nclass TasksScreen extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      tasksList: currentTasksList,\r\n      changeAddTaskInputValue,\r\n      changeTaskFilter,\r\n      changeSearchTasksInputValue,\r\n    } = this.props;\r\n\r\n    const { tasksList: prevTasksList } = prevProps;\r\n\r\n    if (!currentTasksList.length && prevTasksList.length) {\r\n      changeAddTaskInputValue(\"\");\r\n      changeTaskFilter(filterAll.name);\r\n      changeSearchTasksInputValue(\"\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { tasksList } = this.props;\r\n    return (\r\n      <div className=\"screen tasks-screen\">\r\n        <SwitchTransition mode=\"out-in\">\r\n          <CSSTransition timeout={300} key={!tasksList.length}>\r\n            {!tasksList.length ? (\r\n              <TasksWelcomeBanner />\r\n            ) : (\r\n              <>\r\n                <TasksHeader />\r\n                <TasksMain />\r\n              </>\r\n            )}\r\n          </CSSTransition>\r\n        </SwitchTransition>\r\n        <TasksFooter />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  const {\r\n    toDo: { list },\r\n  } = store;\r\n\r\n  return {\r\n    tasksList: list,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  changeAddTaskInputValue: (value) => changeAddTaskInputValue(value),\r\n  changeTaskFilter: (filter) => changeTaskFilter(filter),\r\n  changeSearchTasksInputValue: (value) => changeSearchTasksInputValue(value),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksScreen);\r\n","import React, { useEffect } from \"react\";\r\nimport { HashRouter, Routes, Route, useLocation } from \"react-router-dom\";\r\nimport Footer from \"../components/Footer\";\r\nimport MainScreen from \"../screens/MainScreen\";\r\nimport NewsScreen from \"../screens/NewsScreen\";\r\nimport WeatherScreen from \"../screens/WeatherScreen\";\r\nimport TasksScreen from \"../screens/TasksScreen\";\r\nimport { connect } from \"react-redux\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nconst Router = ({ store }) => {\r\n  useEffect(() => {\r\n    localStorage.setItem(\"all-in-one\", JSON.stringify(store));\r\n  });\r\n\r\n  return (\r\n    <HashRouter>\r\n      <RouterAnimation />\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nconst RouterAnimation = () => {\r\n  let location = useLocation();\r\n\r\n  return (\r\n    <>\r\n      <TransitionGroup component={null}>\r\n        <CSSTransition key={location.key} timeout={300}>\r\n          <Routes location={location}>\r\n            <Route path=\"/\" element={<MainScreen />} />\r\n            <Route path=\"/news\" element={<NewsScreen />} />\r\n            <Route path=\"/weather\" element={<WeatherScreen />} />\r\n            <Route path=\"/tasks\" element={<TasksScreen />} />\r\n          </Routes>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (store) => {\r\n  return { store: store };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Router);\r\n","import {\r\n  ADD_NEW_TASK,\r\n  CHANGE_TASK_FILTER,\r\n  DELETE_TASK,\r\n  CHANGE_SEARCH_TASKS_INPUT_VALUE,\r\n  TOGGLE_TASK,\r\n  CHANGE_ADD_TASK_INPUT_VALUE,\r\n  CHECK_ALL_TASKS,\r\n  DELETE_COMPLETED_TASKS,\r\n  EDIT_TASK,\r\n} from \"../actions/toDo\";\r\nimport { filterAll } from \"../constants/tasks\";\r\n\r\nlet localInitialState = JSON.parse(localStorage.getItem(\"all-in-one\"));\r\n\r\nif (localInitialState) {\r\n  localInitialState = localInitialState.toDo;\r\n} else localInitialState = null;\r\n\r\nconst initialState = localInitialState || {\r\n  list: [],\r\n  filter: filterAll.name,\r\n  searchTasksInputValue: \"\",\r\n  addTaskInputValue: \"\",\r\n};\r\n\r\nexport function toDoReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  const { list } = state;\r\n\r\n  switch (type) {\r\n    case ADD_NEW_TASK:\r\n      return {\r\n        ...state,\r\n        list: list.concat({\r\n          value: payload.value,\r\n          check: false,\r\n          id: Date.now(),\r\n        }),\r\n      };\r\n    case TOGGLE_TASK:\r\n      return {\r\n        ...state,\r\n        list: list.map((item) => {\r\n          if (item.id === payload.id) {\r\n            return { ...item, check: !item.check };\r\n          } else return item;\r\n        }),\r\n      };\r\n    case DELETE_TASK:\r\n      return { ...state, list: list.filter(({ id }) => id !== payload.id) };\r\n    case CHANGE_TASK_FILTER:\r\n      return { ...state, filter: payload.filter };\r\n    case CHANGE_SEARCH_TASKS_INPUT_VALUE:\r\n      return { ...state, searchTasksInputValue: payload.value };\r\n    case CHANGE_ADD_TASK_INPUT_VALUE:\r\n      return { ...state, addTaskInputValue: payload.value };\r\n    case CHECK_ALL_TASKS:\r\n      let check = false;\r\n      list.forEach((el) => {\r\n        if (!el.check) {\r\n          check = true;\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        list: list.map((el) => {\r\n          return { ...el, check: check };\r\n        }),\r\n      };\r\n    case DELETE_COMPLETED_TASKS:\r\n      return {\r\n        ...state,\r\n        list: list.filter(({ check }) => !check),\r\n      };\r\n    case EDIT_TASK:\r\n      return {\r\n        ...state,\r\n        list: list.map((task) => {\r\n          const { id, value } = payload;\r\n          if (task.id === id) {\r\n            task.value = value;\r\n          }\r\n          return task;\r\n        }),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_LOCATION_BY_IP } from \"../actions/weather\";\r\n\r\nlet localInitialState = JSON.parse(localStorage.getItem(\"all-in-one\"));\r\n\r\nif (localInitialState) {\r\n  localInitialState = localInitialState.weather;\r\n} else localInitialState = null;\r\n\r\nconst initialState = localInitialState || {\r\n  locationByIp: { city: \"\" },\r\n};\r\n\r\nexport function weatherReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  const { locationByIp } = state;\r\n\r\n  switch (type) {\r\n    case SET_LOCATION_BY_IP:\r\n      return { ...state, locationByIp: Object.assign(locationByIp, payload) };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { toDoReducer } from \"./toDo\";\r\nimport { weatherReducer } from \"./weather\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  toDo: toDoReducer,\r\n  weather: weatherReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { rootReducer } from \"../reducers/index\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(logger, thunk))\r\n);\r\n\r\nexport default store;\r\n\r\n// import { applyMiddleware, createStore } from \"redux\";\r\n// import thunk from \"redux-thunk\";\r\n// import { rootReducer } from \"../reducers/index\";\r\n\r\n// const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n// export default store;\r\n","import { Provider } from \"react-redux\";\r\nimport Router from \"./router\";\r\nimport store from \"./store\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\nimport \"./assets/styles/styles.scss\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n"],"sourceRoot":""}