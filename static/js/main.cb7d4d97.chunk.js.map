{"version":3,"sources":["components/Footer/index.js","screens/MainScreen/index.js","screens/NewsScreen/index.js","actions/weather.js","components/WeatherHeader/index.js","components/Preloader/imdex.js","components/RequestErrorBanner/index.js","components/WeatherInfoItem/index.js","constants/weather.js","components/WeatherMain/index.js","screens/WeatherScreen/index.js","actions/tasks.js","components/TasksHeader/index.js","constants/tasks.js","components/TasksItem/index.js","components/TasksMain/index.js","components/TasksFilterButton/index.js","components/TasksFooter/index.js","components/TasksWelcomeBanner/index.js","screens/TasksScreen/index.js","router/index.js","reducers/tasks.js","reducers/weather.js","reducers/index.js","store/index.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Footer","className","to","icon","faHome","faNewspaper","faCloud","faListUl","MainScreen","React","Component","NewsScreen","SET_CURRENT_LOCATION","setCurrentLocation","location","type","payload","WeatherHeader","this","props","currentCity","isCurrentCitySearchError","currentCityOutput","faMapMarkerAlt","connect","store","weather","currentLocation","city","isSearchError","Preloader","RequestErrorBanner","text","WeatherInfoItem","state","isPreloader","isError","errorText","cityName","setState","fetch","then","response","status","json","Error","weatherObject","weatherMain","main","weatherDescription","description","weatherIcon","temp","tempFeelsLike","feels_like","tempMin","temp_min","tempMax","temp_max","humidity","wind","windSpeed","speed","windDeg","deg","cloudiness","clouds","all","name","result","catch","error","message","finally","console","log","CSSTransition","in","timeout","mountOnEnter","unmountOnExit","WeatherMain","WeatherScreen","getCurrentLocation","mapDispatchToProps","dispatch","name_en","ADD_NEW_TASK","TOGGLE_TASK","DELETE_TASK","CHANGE_TASK_FILTER","CHANGE_SEARCH_TASKS_INPUT_VALUE","CHANGE_ADD_TASK_INPUT_VALUE","CHECK_ALL_TASKS","DELETE_COMPLETED_TASKS","EDIT_TASK","changeAddTaskInputValue","value","changeTaskFilter","filter","changeSearchTasksInputValue","TasksHeader","handleChangeInput","e","target","handleClickClearButton","tasksList","searchTasksInputValue","checkAllTasks","deleteCompletedTasks","check","counter","forEach","el","length","onClick","faBackspace","onChange","placeholder","faChevronDown","tasks","list","filterAll","filterActive","filterCompleted","Hightlight","otherValue","hightlightValue","ChangedValue","searchValue","string","newSearchValue","replace","regExp","RegExp","matchValue","match","split","map","index","array","shift","TasksItem","handleClickValue","isShowEditValue","editorValue","handleChangeEditor","addNewValue","editTask","id","trim","handlePressEditor","key","handleBlurEditor","handleFocusEditor","event","toggleTask","deleteTask","searchInputValue","faCheck","onFocus","autoFocus","onKeyPress","onBlur","faTimes","data","TasksMain","componentDidUpdate","prevProps","prevTasksList","prevFilter","prevSearchValue","currentTasksList","currentFilter","currentSearchValue","tasksMainRef","current","scrollTo","createRef","ref","TransitionGroup","component","task","toLowerCase","includes","reverse","title","TasksFooter","handlePressInput","handleClickButton","addTaskInputValue","addNewTask","redInputBorder","inputRef","focus","handleBlurInput","faPlus","TasksWelcomeBanner","faAngleDown","TasksScreen","SwitchTransition","mode","RouterAnimation","useLocation","path","element","useEffect","localStorage","setItem","JSON","stringify","localInitialState","parse","getItem","initialState","rootReducer","combineReducers","action","concat","Date","now","item","Object","assign","createStore","composeWithDevTools","applyMiddleware","logger","thunk","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb7d4d97.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  faCloud,\r\n  faHome,\r\n  faListUl,\r\n  faNewspaper,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./styles.scss\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"container footer-container\">\r\n        <nav className=\"nav-menu\">\r\n          <ul>\r\n            <li>\r\n              <NavLink to=\"/\">\r\n                <FontAwesomeIcon icon={faHome} />\r\n                Main\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/news\">\r\n                <FontAwesomeIcon icon={faNewspaper} />\r\n                News\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/weather\">\r\n                <FontAwesomeIcon icon={faCloud} />\r\n                Weather\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/tasks\">\r\n                <FontAwesomeIcon icon={faListUl} />\r\n                Tasks\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nclass MainScreen extends React.Component {\r\n  render() {\r\n    return <div className=\"main-screen screen\">MainScreen</div>;\r\n  }\r\n}\r\n\r\nexport default MainScreen;\r\n","import React from \"react\";\r\n\r\nclass NewsScreen extends React.Component {\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return <div className=\"news-screen screen\"></div>;\r\n  }\r\n}\r\n\r\nexport default NewsScreen;\r\n","// Types\r\nexport const SET_CURRENT_LOCATION = \"SET_CURRENT_LOCATION\";\r\n\r\n// Actions\r\nexport const setCurrentLocation = (location) => {\r\n  return {\r\n    type: SET_CURRENT_LOCATION,\r\n    payload: location,\r\n  };\r\n};\r\n\r\nexport const getLocationByIp = () => {\r\n  return (dispatch) => {\r\n    dispatch(setCurrentLocation({ city: \"\", isSearchError: false }));\r\n    return fetch(`https://api.sypexgeo.net/json/`)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        }\r\n        throw new Error(response.status);\r\n      })\r\n      .then((location) => {\r\n        const { city } = location;\r\n        if (city) {\r\n          dispatch(\r\n            setCurrentLocation({ city: city.name_en, isSearchError: false })\r\n          );\r\n        } else throw new Error(\"Current location not found\");\r\n      })\r\n      .catch(() => {\r\n        dispatch(setCurrentLocation({ city: \"\", isSearchError: true }));\r\n      });\r\n  };\r\n};\r\n","import { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./styles.scss\";\r\n\r\nclass WeatherHeader extends React.Component {\r\n  render() {\r\n    const { currentCity, isCurrentCitySearchError } = this.props;\r\n\r\n    let currentCityOutput = \"\";\r\n\r\n    if (currentCity) {\r\n      currentCityOutput = currentCity;\r\n    } else if (!currentCity && isCurrentCitySearchError) {\r\n      currentCityOutput = \"City not found\";\r\n    } else {\r\n      currentCityOutput = \"Locating...\";\r\n    }\r\n\r\n    return (\r\n      <header className=\"weather-header\">\r\n        <div className=\"header-container container\">\r\n          <div className=\"current-city\">\r\n            {currentCityOutput}\r\n            <FontAwesomeIcon icon={faMapMarkerAlt} />\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  const {\r\n    weather: {\r\n      currentLocation: {\r\n        city: currentCity,\r\n        isSearchError: isCurrentCitySearchError,\r\n      },\r\n    },\r\n  } = store;\r\n\r\n  return {\r\n    currentCity,\r\n    isCurrentCitySearchError,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(WeatherHeader);\r\n","import \"./styles.scss\";\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className=\"preloader\">\r\n      <div className=\"lds-roller\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import \"./styles.scss\";\r\n\r\nconst RequestErrorBanner = ({ text }) => {\r\n  return (\r\n    <div className=\"request-error-banner\">\r\n      <div className=\"container\">\r\n        <div className=\"text\">{text}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RequestErrorBanner;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { getWeatherFunction } from \"../../constants/weather\";\r\nimport Preloader from \"../Preloader/imdex\";\r\nimport RequestErrorBanner from \"../RequestErrorBanner\";\r\nimport \"./styles.scss\";\r\n\r\nclass WeatherInfoItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      weather: null,\r\n      isPreloader: false,\r\n      isError: false,\r\n      errorText: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { currentCity } = this.props;\r\n\r\n    if (currentCity) {\r\n      this.setState({ isPreloader: true });\r\n      getWeatherFunction(null)\r\n        .then((result) => this.setState({ weather: result }))\r\n        .catch((error) =>\r\n          this.setState({\r\n            isError: true,\r\n            errorText: `Error: ${error.message}.`,\r\n          })\r\n        )\r\n        .finally(() => this.setState({ isPreloader: false }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isPreloader, errorText, isError } = this.state;\r\n\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"weather-info-item\">\r\n        <CSSTransition\r\n          in={isPreloader}\r\n          timeout={300}\r\n          mountOnEnter\r\n          unmountOnExit\r\n        >\r\n          <Preloader />\r\n        </CSSTransition>\r\n        <CSSTransition in={isError} timeout={300} mountOnEnter unmountOnExit>\r\n          <RequestErrorBanner\r\n            text={`Oops, something went wrong. ${errorText}`}\r\n          />\r\n        </CSSTransition>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null)(WeatherInfoItem);\r\n","// Weather request function\r\nexport const getWeatherFunction = (cityName) => {\r\n  return fetch(\r\n    `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=12c7488f70bcd015f75b9a10d559d91f&units=metric`\r\n  )\r\n    .then((response) => {\r\n      if (response.status === 200) {\r\n        return response.json();\r\n      }\r\n      throw new Error(response.status);\r\n    })\r\n    .then((weatherObject) => {\r\n      const {\r\n        weather: [\r\n          {\r\n            main: weatherMain,\r\n            description: weatherDescription,\r\n            icon: weatherIcon,\r\n          },\r\n        ],\r\n        main: {\r\n          temp,\r\n          feels_like: tempFeelsLike,\r\n          temp_min: tempMin,\r\n          temp_max: tempMax,\r\n          humidity,\r\n        },\r\n        wind: { speed: windSpeed, deg: windDeg },\r\n        clouds: { all: cloudiness },\r\n        name: cityName,\r\n      } = weatherObject;\r\n\r\n      return {\r\n        weatherMain,\r\n        weatherDescription,\r\n        weatherIcon,\r\n        temp,\r\n        tempFeelsLike,\r\n        tempMin,\r\n        tempMax,\r\n        humidity,\r\n        windSpeed,\r\n        windDeg,\r\n        cloudiness,\r\n        cityName,\r\n      };\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport WeatherInfoItem from \"../WeatherInfoItem\";\r\nimport \"./styles.scss\";\r\n\r\nclass WeatherMain extends React.Component {\r\n  render() {\r\n    const { currentCity } = this.props;\r\n\r\n    return (\r\n      <div className=\"weather-main\">\r\n        <div className=\"weather-info-list\">\r\n          {!!currentCity && <WeatherInfoItem currentCity={currentCity} />}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const {\r\n    weather: {\r\n      currentLocation: { city: currentCity },\r\n    },\r\n  } = state;\r\n\r\n  return {\r\n    currentCity: currentCity,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(WeatherMain);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getLocationByIp } from \"../../actions/weather\";\r\nimport WeatherHeader from \"../../components/WeatherHeader\";\r\nimport WeatherMain from \"../../components/WeatherMain\";\r\nimport \"./styles.scss\";\r\n\r\nclass WeatherScreen extends React.Component {\r\n  componentDidMount() {\r\n    const { getCurrentLocation, currentCity } = this.props;\r\n\r\n    if (!currentCity) {\r\n      getCurrentLocation();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"weather-screen screen\">\r\n        <WeatherHeader />\r\n        <WeatherMain />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const {\r\n    weather: {\r\n      currentLocation: { city: currentCity },\r\n    },\r\n  } = state;\r\n\r\n  return {\r\n    currentCity: currentCity,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getCurrentLocation: () => getLocationByIp(),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherScreen);\r\n","// Types\r\nexport const ADD_NEW_TASK = \"ADD_NEW_TASK\";\r\nexport const TOGGLE_TASK = \"TOGGLE_TASK\";\r\nexport const DELETE_TASK = \"DELETE_TASK\";\r\nexport const CHANGE_TASK_FILTER = \"CHANGE_TASK_FILTER\";\r\nexport const CHANGE_SEARCH_TASKS_INPUT_VALUE =\r\n  \"CHANGE_SEARCH_TASKS_INPUT_VALUE\";\r\nexport const CHANGE_ADD_TASK_INPUT_VALUE = \"CHANGE_ADD_TASK_INPUT_VALUE\";\r\nexport const CHECK_ALL_TASKS = \"CHECK_ALL_TASKS\";\r\nexport const DELETE_COMPLETED_TASKS = \"DELETE_COMPLETED_TASKS\";\r\nexport const EDIT_TASK = \"EDIT_TASK\";\r\n\r\n// Actions\r\nexport const addNewTask = (value) => {\r\n  return {\r\n    type: ADD_NEW_TASK,\r\n    payload: { value },\r\n  };\r\n};\r\n\r\nexport const changeAddTaskInputValue = (value) => {\r\n  return {\r\n    type: CHANGE_ADD_TASK_INPUT_VALUE,\r\n    payload: { value },\r\n  };\r\n};\r\n\r\nexport const toggleTask = (id) => {\r\n  return {\r\n    type: TOGGLE_TASK,\r\n    payload: { id },\r\n  };\r\n};\r\n\r\nexport const deleteTask = (id) => {\r\n  return {\r\n    type: DELETE_TASK,\r\n    payload: { id },\r\n  };\r\n};\r\n\r\nexport const changeTaskFilter = (filter) => {\r\n  return {\r\n    type: CHANGE_TASK_FILTER,\r\n    payload: { filter },\r\n  };\r\n};\r\n\r\nexport const changeSearchTasksInputValue = (value) => {\r\n  return {\r\n    type: CHANGE_SEARCH_TASKS_INPUT_VALUE,\r\n    payload: { value },\r\n  };\r\n};\r\n\r\nexport const checkAllTasks = () => {\r\n  return {\r\n    type: CHECK_ALL_TASKS,\r\n  };\r\n};\r\n\r\nexport const deleteCompletedTasks = () => {\r\n  return {\r\n    type: DELETE_COMPLETED_TASKS,\r\n  };\r\n};\r\n\r\nexport const editTask = (data) => {\r\n  return {\r\n    type: EDIT_TASK,\r\n    payload: data,\r\n  };\r\n};\r\n","import { faBackspace, faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport React from \"react\";\r\nimport \"./styles.scss\";\r\nimport {\r\n  changeSearchTasksInputValue,\r\n  checkAllTasks,\r\n  deleteCompletedTasks,\r\n} from \"../../actions/tasks\";\r\n\r\nclass TasksHeader extends React.Component {\r\n  handleChangeInput = (e) => {\r\n    const { changeSearchTasksInputValue } = this.props;\r\n    changeSearchTasksInputValue(e.target.value);\r\n  };\r\n\r\n  handleClickClearButton = () => {\r\n    const { changeSearchTasksInputValue } = this.props;\r\n    changeSearchTasksInputValue(\"\");\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      tasksList,\r\n      searchTasksInputValue,\r\n      checkAllTasks,\r\n      deleteCompletedTasks,\r\n    } = this.props;\r\n\r\n    let check = false;\r\n    let counter = 0;\r\n\r\n    tasksList.forEach((el) => {\r\n      if (el.check) {\r\n        check = true;\r\n      } else counter += 1;\r\n    });\r\n\r\n    return (\r\n      <CSSTransition\r\n        in={!!tasksList.length}\r\n        timeout={300}\r\n        unmountOnExit\r\n        mountOnEnter\r\n      >\r\n        <header className=\"tasks-header\">\r\n          <div className=\"search\">\r\n            <div className=\"container search-container\">\r\n              <div className=\"input-wrapper\">\r\n                <CSSTransition\r\n                  in={!!searchTasksInputValue}\r\n                  timeout={300}\r\n                  unmountOnExit\r\n                  mountOnEnter\r\n                >\r\n                  <div\r\n                    onClick={this.handleClickClearButton}\r\n                    className=\"clear-input\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faBackspace} />\r\n                  </div>\r\n                </CSSTransition>\r\n                <input\r\n                  onChange={this.handleChangeInput}\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  value={searchTasksInputValue}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bottom-side\">\r\n            <div className=\"container bottom-container\">\r\n              <div className=\"column left-column\">\r\n                <div\r\n                  onClick={checkAllTasks}\r\n                  className={`button check-all-button${\r\n                    tasksList.length && !counter ? \" green\" : \"\"\r\n                  }`}\r\n                >\r\n                  <FontAwesomeIcon icon={faChevronDown} />\r\n                </div>\r\n                <div className=\"counter\">Active: {counter}</div>\r\n              </div>\r\n              <div className=\"column right-column\">\r\n                <CSSTransition\r\n                  in={!!check}\r\n                  timeout={300}\r\n                  unmountOnExit\r\n                  mountOnEnter\r\n                >\r\n                  <div\r\n                    onClick={deleteCompletedTasks}\r\n                    className=\"button delete-completed-button\"\r\n                  >\r\n                    Delete completed\r\n                  </div>\r\n                </CSSTransition>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      </CSSTransition>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  const {\r\n    tasks: { list, searchTasksInputValue },\r\n  } = store;\r\n\r\n  return {\r\n    tasksList: list,\r\n    searchTasksInputValue: searchTasksInputValue,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  changeSearchTasksInputValue: (value) => changeSearchTasksInputValue(value),\r\n  checkAllTasks: () => checkAllTasks(),\r\n  deleteCompletedTasks: () => deleteCompletedTasks(),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksHeader);\r\n","// Filters\r\nexport const filterAll = {\r\n  title: \"All\",\r\n  name: \"all\",\r\n};\r\nexport const filterActive = {\r\n  title: \"Active\",\r\n  name: \"active\",\r\n};\r\nexport const filterCompleted = {\r\n  title: \"Completed\",\r\n  name: \"completed\",\r\n};\r\n","import { faCheck, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { deleteTask, editTask, toggleTask } from \"../../actions/tasks\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./styles.scss\";\r\nimport React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst Hightlight = ({ otherValue, hightlightValue }) => {\r\n  return (\r\n    <>\r\n      {otherValue}\r\n      <span className={\"hightlight\"}>{hightlightValue}</span>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ChangedValue = ({ searchValue, string }) => {\r\n  if (searchValue) {\r\n    const newSearchValue = searchValue.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    const regExp = new RegExp(newSearchValue, \"gi\");\r\n    const matchValue = string.match(regExp);\r\n\r\n    if (matchValue) {\r\n      return string.split(regExp).map((otherValue, index, array) => {\r\n        if (index < array.length - 1) {\r\n          const hightlightValue = matchValue.shift();\r\n          return (\r\n            <Hightlight\r\n              hightlightValue={hightlightValue}\r\n              otherValue={otherValue}\r\n              key={index + string}\r\n            />\r\n          );\r\n        }\r\n        return otherValue;\r\n      });\r\n    }\r\n    return string;\r\n  }\r\n  return string;\r\n};\r\n\r\nclass TasksItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isShowEditValue: false,\r\n      editorValue: \"\",\r\n    };\r\n  }\r\n\r\n  handleClickValue = () => {\r\n    const { value } = this.props;\r\n    this.setState({ isShowEditValue: true, editorValue: value });\r\n  };\r\n\r\n  handleChangeEditor = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({ editorValue: e.target.value });\r\n  };\r\n\r\n  addNewValue = () => {\r\n    const { editTask, id } = this.props;\r\n    const { editorValue } = this.state;\r\n\r\n    if (editorValue.trim()) {\r\n      editTask({ id: id, value: editorValue });\r\n      this.setState({ isShowEditValue: false });\r\n    } else {\r\n      this.setState({ isShowEditValue: false, editorValue: \"\" });\r\n    }\r\n  };\r\n\r\n  handlePressEditor = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.addNewValue();\r\n    }\r\n  };\r\n\r\n  handleBlurEditor = () => {\r\n    this.addNewValue();\r\n  };\r\n\r\n  handleFocusEditor = (event) => {\r\n    const value = event.target.value;\r\n    event.target.value = \"\";\r\n    event.target.value = value;\r\n  };\r\n\r\n  render() {\r\n    const { value, check, id, toggleTask, deleteTask, searchInputValue } =\r\n      this.props;\r\n\r\n    const { isShowEditValue, editorValue } = this.state;\r\n\r\n    return (\r\n      <li className={`tasks-item${check ? \" checked\" : \"\"}`} id={id}>\r\n        <div className=\"check-button\" onClick={() => toggleTask(id)}>\r\n          <CSSTransition in={check} timeout={300} unmountOnExit mountOnEnter>\r\n            <FontAwesomeIcon icon={faCheck} />\r\n          </CSSTransition>\r\n        </div>\r\n        <div className=\"value\">\r\n          {isShowEditValue ? (\r\n            <input\r\n              onFocus={this.handleFocusEditor}\r\n              autoFocus\r\n              onChange={this.handleChangeEditor}\r\n              onKeyPress={this.handlePressEditor}\r\n              className=\"inner editor\"\r\n              onBlur={this.handleBlurEditor}\r\n              value={editorValue}\r\n              type=\"text\"\r\n            />\r\n          ) : (\r\n            <div className=\"inner\" onClick={() => this.handleClickValue()}>\r\n              {<ChangedValue searchValue={searchInputValue} string={value} />}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"delete-button\" onClick={() => deleteTask(id)}>\r\n          <FontAwesomeIcon icon={faTimes} />\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  return {\r\n    searchInputValue: store.tasks.searchTasksInputValue,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  deleteTask: (id) => deleteTask(id),\r\n  toggleTask: (id) => toggleTask(id),\r\n  editTask: (data) => editTask(data),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { filterActive, filterCompleted } from \"../../constants/tasks\";\r\nimport TasksItem from \"../TasksItem\";\r\nimport \"./styles.scss\";\r\n\r\nclass TasksMain extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.tasksMainRef = React.createRef();\r\n  }\r\n\r\n  componentDidUpdate = (prevProps) => {\r\n    const {\r\n      tasksList: prevTasksList,\r\n      filter: prevFilter,\r\n      searchInputValue: prevSearchValue,\r\n    } = prevProps;\r\n    const {\r\n      tasksList: currentTasksList,\r\n      filter: currentFilter,\r\n      searchInputValue: currentSearchValue,\r\n    } = this.props;\r\n\r\n    if (\r\n      prevTasksList.length < currentTasksList.length ||\r\n      prevFilter !== currentFilter ||\r\n      prevSearchValue !== currentSearchValue\r\n    ) {\r\n      this.tasksMainRef.current.scrollTo(0, 0);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { tasksList, filter, searchInputValue } = this.props;\r\n    return (\r\n      <main className=\"tasks-main\" ref={this.tasksMainRef}>\r\n        <div className=\"tasks-list\">\r\n          <div className=\"container\">\r\n            <ul>\r\n              <TransitionGroup component={null}>\r\n                {tasksList\r\n                  .filter((task) => {\r\n                    switch (filter) {\r\n                      case filterActive.name:\r\n                        return !task.check;\r\n                      case filterCompleted.name:\r\n                        return task.check;\r\n                      default:\r\n                        return task;\r\n                    }\r\n                  })\r\n                  .filter((task) => {\r\n                    if (searchInputValue) {\r\n                      const matchValue = searchInputValue.toLowerCase();\r\n                      if (task.value.toLowerCase().includes(matchValue))\r\n                        return true;\r\n                      return false;\r\n                    } else {\r\n                      return task;\r\n                    }\r\n                  })\r\n                  .reverse()\r\n                  .map((task) => {\r\n                    const { check, value, id } = task;\r\n                    return (\r\n                      <CSSTransition key={id} timeout={300}>\r\n                        <TasksItem check={check} value={value} id={id} />\r\n                      </CSSTransition>\r\n                    );\r\n                  })}\r\n              </TransitionGroup>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  const {\r\n    tasks: { list, filter, searchTasksInputValue },\r\n  } = store;\r\n\r\n  return {\r\n    tasksList: list,\r\n    filter: filter,\r\n    searchInputValue: searchTasksInputValue,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TasksMain);\r\n","import { connect } from \"react-redux\";\r\nimport { changeTaskFilter } from \"../../actions/tasks\";\r\nimport \"./styles.scss\";\r\n\r\nconst TasksFilterButton = ({ name, title, changeTaskFilter, filter }) => {\r\n  const className = `${\r\n    name === filter ? name + \" current\" : name\r\n  } button tasks-filter-button`;\r\n\r\n  return (\r\n    <button onClick={() => changeTaskFilter(name)} className={className}>\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (store) => {\r\n  return {\r\n    filter: store.tasks.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  changeTaskFilter: (filter) => changeTaskFilter(filter),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksFilterButton);\r\n","import \"./styles.scss\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { connect } from \"react-redux\";\r\nimport { addNewTask, changeAddTaskInputValue } from \"../../actions/tasks\";\r\nimport React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport {\r\n  filterActive,\r\n  filterCompleted,\r\n  filterAll,\r\n} from \"../../constants/tasks\";\r\nimport TasksFilterButton from \"../TasksFilterButton\";\r\n\r\nclass TasksFooter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redInputBorder: false,\r\n    };\r\n    this.inputRef = React.createRef();\r\n  }\r\n\r\n  handleChangeInput = (e) => {\r\n    const { changeAddTaskInputValue } = this.props;\r\n    const value = e.target.value;\r\n\r\n    if (value.length <= 140) {\r\n      changeAddTaskInputValue(value);\r\n    }\r\n  };\r\n\r\n  handlePressInput = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.handleClickButton();\r\n    }\r\n  };\r\n\r\n  handleClickButton = () => {\r\n    const { changeAddTaskInputValue, addTaskInputValue } = this.props;\r\n    if (addTaskInputValue.length && addTaskInputValue.trim()) {\r\n      const { addNewTask } = this.props;\r\n      addNewTask(addTaskInputValue);\r\n      changeAddTaskInputValue(\"\");\r\n      this.setState({ redInputBorder: false });\r\n    } else {\r\n      this.setState({ redInputBorder: true });\r\n    }\r\n\r\n    this.inputRef.current.focus();\r\n  };\r\n\r\n  handleBlurInput = () => {\r\n    this.setState({ redInputBorder: false });\r\n  };\r\n\r\n  render() {\r\n    const { addTaskInputValue, tasksList } = this.props;\r\n    const { redInputBorder } = this.state;\r\n    return (\r\n      <footer className=\"tasks-footer\">\r\n        <CSSTransition\r\n          in={!!tasksList.length}\r\n          timeout={300}\r\n          mountOnEnter\r\n          unmountOnExit\r\n        >\r\n          <div className=\"filters\">\r\n            <div className=\"filters-container container\">\r\n              <TasksFilterButton\r\n                name={filterAll.name}\r\n                title={filterAll.title}\r\n              />\r\n              <TasksFilterButton\r\n                name={filterActive.name}\r\n                title={filterActive.title}\r\n              />\r\n              <TasksFilterButton\r\n                name={filterCompleted.name}\r\n                title={filterCompleted.title}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CSSTransition>\r\n        <div className=\"add-task-input\">\r\n          <div className=\"container input-container\">\r\n            <div className=\"input-wrapper\">\r\n              <input\r\n                ref={this.inputRef}\r\n                className={redInputBorder ? \"red\" : \"\"}\r\n                onKeyPress={this.handlePressInput}\r\n                onBlur={this.handleBlurInput}\r\n                onChange={this.handleChangeInput}\r\n                value={addTaskInputValue}\r\n                type=\"text\"\r\n                placeholder=\"Add Task\"\r\n              />\r\n              <CSSTransition\r\n                in={!!addTaskInputValue}\r\n                timeout={300}\r\n                unmountOnExit\r\n                mountOnEnter\r\n              >\r\n                <button onClick={this.handleClickButton} className=\"button\">\r\n                  <FontAwesomeIcon icon={faPlus} />\r\n                </button>\r\n              </CSSTransition>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  const {\r\n    tasks: { list, searchTasksInputValue, addTaskInputValue },\r\n  } = store;\r\n\r\n  return {\r\n    tasksList: list,\r\n    searchTasksInputValue: searchTasksInputValue,\r\n    addTaskInputValue: addTaskInputValue,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addNewTask: (value) => addNewTask(value),\r\n  changeAddTaskInputValue: (value) => changeAddTaskInputValue(value),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksFooter);\r\n","import { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./styles.scss\";\r\n\r\nconst TasksWelcomeBanner = () => {\r\n  return (\r\n    <div className=\"tasks-welcome-banner\">\r\n      <div className=\"container\">\r\n        <div className=\"text\">\r\n          This is where your tasks will be. You can add your first task in the\r\n          field below.\r\n        </div>\r\n        <FontAwesomeIcon icon={faAngleDown} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksWelcomeBanner;\r\n","import TasksHeader from \"../../components/TasksHeader\";\r\nimport TasksMain from \"../../components/TasksMain\";\r\nimport TasksFooter from \"../../components/TasksFooter\";\r\nimport { CSSTransition, SwitchTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./styles.scss\";\r\nimport TasksWelcomeBanner from \"../../components/TasksWelcomeBanner\";\r\nimport React from \"react\";\r\nimport {\r\n  changeAddTaskInputValue,\r\n  changeSearchTasksInputValue,\r\n  changeTaskFilter,\r\n} from \"../../actions/tasks\";\r\nimport { filterAll } from \"../../constants/tasks\";\r\n\r\nclass TasksScreen extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      tasksList: currentTasksList,\r\n      changeAddTaskInputValue,\r\n      changeTaskFilter,\r\n      changeSearchTasksInputValue,\r\n    } = this.props;\r\n\r\n    const { tasksList: prevTasksList } = prevProps;\r\n\r\n    if (!currentTasksList.length && prevTasksList.length) {\r\n      changeAddTaskInputValue(\"\");\r\n      changeTaskFilter(filterAll.name);\r\n      changeSearchTasksInputValue(\"\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { tasksList } = this.props;\r\n    return (\r\n      <div className=\"screen tasks-screen\">\r\n        <SwitchTransition mode=\"out-in\">\r\n          <CSSTransition timeout={300} key={!tasksList.length}>\r\n            {!tasksList.length ? (\r\n              <TasksWelcomeBanner />\r\n            ) : (\r\n              <>\r\n                <TasksHeader />\r\n                <TasksMain />\r\n              </>\r\n            )}\r\n          </CSSTransition>\r\n        </SwitchTransition>\r\n        <TasksFooter />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  const {\r\n    tasks: { list },\r\n  } = store;\r\n\r\n  return {\r\n    tasksList: list,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  changeAddTaskInputValue: (value) => changeAddTaskInputValue(value),\r\n  changeTaskFilter: (filter) => changeTaskFilter(filter),\r\n  changeSearchTasksInputValue: (value) => changeSearchTasksInputValue(value),\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksScreen);\r\n","import React, { useEffect } from \"react\";\r\nimport { HashRouter, Routes, Route, useLocation } from \"react-router-dom\";\r\nimport Footer from \"../components/Footer\";\r\nimport MainScreen from \"../screens/MainScreen\";\r\nimport NewsScreen from \"../screens/NewsScreen\";\r\nimport WeatherScreen from \"../screens/WeatherScreen\";\r\nimport TasksScreen from \"../screens/TasksScreen\";\r\nimport { connect } from \"react-redux\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nconst Router = ({ store }) => {\r\n  useEffect(() => {\r\n    localStorage.setItem(\"all-in-one\", JSON.stringify(store));\r\n  });\r\n\r\n  return (\r\n    <HashRouter>\r\n      <RouterAnimation />\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nconst RouterAnimation = () => {\r\n  let location = useLocation();\r\n\r\n  return (\r\n    <>\r\n      <TransitionGroup component={null}>\r\n        <CSSTransition key={location.key} timeout={300}>\r\n          <Routes location={location}>\r\n            <Route path=\"/\" element={<MainScreen />} />\r\n            <Route path=\"/news\" element={<NewsScreen />} />\r\n            <Route path=\"/weather\" element={<WeatherScreen />} />\r\n            <Route path=\"/tasks\" element={<TasksScreen />} />\r\n          </Routes>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (store) => {\r\n  return { store: store };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Router);\r\n","import {\r\n  ADD_NEW_TASK,\r\n  CHANGE_TASK_FILTER,\r\n  DELETE_TASK,\r\n  CHANGE_SEARCH_TASKS_INPUT_VALUE,\r\n  TOGGLE_TASK,\r\n  CHANGE_ADD_TASK_INPUT_VALUE,\r\n  CHECK_ALL_TASKS,\r\n  DELETE_COMPLETED_TASKS,\r\n  EDIT_TASK,\r\n} from \"../actions/tasks\";\r\nimport { filterAll } from \"../constants/tasks\";\r\n\r\nlet localInitialState = JSON.parse(localStorage.getItem(\"all-in-one\"));\r\n\r\nif (localInitialState) {\r\n  localInitialState = localInitialState.tasks;\r\n} else localInitialState = null;\r\n\r\nconst initialState = localInitialState || {\r\n  list: [],\r\n  filter: filterAll.name,\r\n  searchTasksInputValue: \"\",\r\n  addTaskInputValue: \"\",\r\n};\r\n\r\nexport function tasksReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  const { list } = state;\r\n\r\n  switch (type) {\r\n    case ADD_NEW_TASK:\r\n      return {\r\n        ...state,\r\n        list: list.concat({\r\n          value: payload.value,\r\n          check: false,\r\n          id: Date.now(),\r\n        }),\r\n      };\r\n    case TOGGLE_TASK:\r\n      return {\r\n        ...state,\r\n        list: list.map((item) => {\r\n          if (item.id === payload.id) {\r\n            return { ...item, check: !item.check };\r\n          } else return item;\r\n        }),\r\n      };\r\n    case DELETE_TASK:\r\n      return { ...state, list: list.filter(({ id }) => id !== payload.id) };\r\n    case CHANGE_TASK_FILTER:\r\n      return { ...state, filter: payload.filter };\r\n    case CHANGE_SEARCH_TASKS_INPUT_VALUE:\r\n      return { ...state, searchTasksInputValue: payload.value };\r\n    case CHANGE_ADD_TASK_INPUT_VALUE:\r\n      return { ...state, addTaskInputValue: payload.value };\r\n    case CHECK_ALL_TASKS:\r\n      let check = false;\r\n      list.forEach((el) => {\r\n        if (!el.check) {\r\n          check = true;\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        list: list.map((el) => {\r\n          return { ...el, check: check };\r\n        }),\r\n      };\r\n    case DELETE_COMPLETED_TASKS:\r\n      return {\r\n        ...state,\r\n        list: list.filter(({ check }) => !check),\r\n      };\r\n    case EDIT_TASK:\r\n      return {\r\n        ...state,\r\n        list: list.map((task) => {\r\n          const { id, value } = payload;\r\n          if (task.id === id) {\r\n            task.value = value;\r\n          }\r\n          return task;\r\n        }),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_LOCATION } from \"../actions/weather\";\r\n\r\nlet localInitialState = JSON.parse(localStorage.getItem(\"all-in-one\"));\r\n\r\nif (localInitialState) {\r\n  localInitialState = localInitialState.weather;\r\n} else localInitialState = null;\r\n\r\nconst initialState = localInitialState || {\r\n  currentLocation: { city: \"\", isSearchError: false },\r\n};\r\n\r\nexport function weatherReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  const { currentLocation } = state;\r\n\r\n  switch (type) {\r\n    case SET_CURRENT_LOCATION:\r\n      return {\r\n        ...state,\r\n        currentLocation: Object.assign(currentLocation, payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { tasksReducer } from \"./tasks\";\r\nimport { weatherReducer } from \"./weather\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  tasks: tasksReducer,\r\n  weather: weatherReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { rootReducer } from \"../reducers/index\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(logger, thunk))\r\n);\r\n\r\nexport default store;\r\n\r\n// import { applyMiddleware, createStore } from \"redux\";\r\n// import thunk from \"redux-thunk\";\r\n// import { rootReducer } from \"../reducers/index\";\r\n\r\n// const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n// export default store;\r\n","import { Provider } from \"react-redux\";\r\nimport Router from \"./router\";\r\nimport store from \"./store\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\nimport \"./assets/styles/styles.scss\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n"],"sourceRoot":""}